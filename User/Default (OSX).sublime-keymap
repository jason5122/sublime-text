[
    // Edit Key Bindings
    {
        "keys": ["super+shift+,"],
        "command": "edit_settings",
        "args": {
            "base_file": "${packages}/Default/Default ($platform).sublime-keymap",
            "default": "[\n\t$0\n]\n"
        }
    },
    // Show Packages folder
    {
        "keys": ["ctrl+alt+p"],
        "command": "open_dir",
        "args": { "dir": "${packages}/User" }
    },
    { "keys": ["super+j"], "command": "prev_view" },
    { "keys": ["super+k"], "command": "next_view" },
    { "keys": ["super+0"], "command": "toggle_side_bar" },
    { "keys": ["super+shift+0"], "command": "reveal_in_side_bar" },
    // Reveal in Finder
    {
        "keys": ["super+o"],
        "command": "open_dir",
        "args": { "dir": "$file_path", "file": "$file_name" }
    },
    // Reveal first sidebar folder in Finder
    {
        "keys": ["super+shift+o"],
        "command": "open_dir",
        "args": { "dir": "$folder" }
    },

    { "keys": ["super+r"], "command": "rename_file" },
    {
        "keys": ["super+shift+backspace"],
        "command": "delete_current_file"
    },

    // Left delete exactly one character
    // Use to ignore tab stops
    // e.g., go from N spaces (indent level) to N-1 spaces
    //       instead of to the previous indent level
    {
        "keys": ["shift+backspace"],
        "command": "run_macro_file",
        "args": {
            "file": "res://Packages/User/Macros/Backspace.sublime-macro"
        }
    },

    { "keys": ["ctrl+u"], "command": "browse_commands" },

    // Fmt
    // NOTE: this uses merge; implement diff using Google lib
    //       use Sublime AStyle Formatter as reference
    {
        "keys": ["ctrl+i"],
        "command": "fmt_format_buffer",
        "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand": "source.json, text.json, source.yaml, source.python, text.tex.latex, source.js, source.css, text.html, source.shell.bash, source.rust, source.ts, source.tsx, source.jsx, source.toml, source.shell.fish, source.cmake, source.racket, source.terraform, source.r, source.pgsql, source.scheme, source.haskell, source.ocaml"
            }
        ]
    },
    // Custom clang-format plugin
    {
        "keys": ["ctrl+i"],
        "command": "clang_format",
        "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand": "source.c++, source.c, source.java"
            }
        ]
    },
    // Scope View plugin
    { "keys": ["ctrl+shift+p"], "command": "toggle_scope_display" },
    // No single quote autocomplete in Racket and Scheme
    {
        "keys": ["'"],
        "command": "insert_snippet",
        "args": { "contents": "'" },
        "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand": "source.racket, source.scheme, source.ocaml"
            }
        ]
    },

    // Disabled default keybindings
    { "keys": ["super+equals"], "command": "noop" },
    { "keys": ["super+plus"], "command": "noop" },
    { "keys": ["super+keypad_plus"], "command": "noop" },
    { "keys": ["super+minus"], "command": "noop" },
    { "keys": ["super+keypad_minus"], "command": "noop" },
]
