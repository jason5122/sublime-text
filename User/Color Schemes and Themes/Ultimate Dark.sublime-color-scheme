{
    // Is actually just Oceanic Next
    // Anything that says custom is modified
    "name": "Ultimate Dark",
    "author": "Jason Han",
    "variables": {
        "blue": "hsl(210, 50%, 60%)",
        "blue2": "hsl(219, 13%, 78%)",
        "blue3": "hsl(209, 13%, 35%)",
        "blue4": "hsl(208, 11%, 45%)",
        "blue5": "hsl(206, 11%, 45%)",
        "blue6": "hsl(219, 20%, 84%)",
        "blue7": "hsl(202, 32%, 15%)",
        "cyan": "hsl(180, 36%, 54%)",
        "green": "hsl(114, 31%, 68%)",
        "orange": "hsl(40, 94%, 68%)",
        "orange2": "hsl(41, 95%, 67%)",
        "orange3": "hsl(21, 93%, 66%)",
        "pink": "hsl(308, 30%, 62%)",
        "pink2": "hsl(300, 30%, 68%)",
        "red": "hsl(359, 83%, 71%)",
        "red2": "hsl(357, 79%, 65%)",
        "red3": "hsl(355, 78%, 65%)",
        "red4": "hsl(16, 29%, 54%)",
        "white": "hsl(219, 28%, 88%)"
    },
    "globals": {
        "foreground": "var(blue6)",
        "background": "var(blue7)",
        // "caret": "var(blue2)", // white caret
        "caret": "var(cyan)", // custom
        "invisibles": "var(blue5)",
        "line_highlight": "color(var(blue5) alpha(0.33))",
        "selection": "var(blue3)",
        "guide": "var(blue4)",
        "active_guide": "var(orange2)",
        "stack_guide": "var(blue3)"
    },
    "rules": [
        // custom: JSON setting names are now yellow
        // ported from Breakers/Mariana
        {
            "name": "Entity name",
            "scope": "entity.name - (entity.name.section | entity.name.tag | entity.name.label)",
            "foreground": "var(orange)"
        },
        // custom: JS annotation
        // ported from Breakers/Mariana
        {
            "name": "Function call",
            "scope": "variable.function, variable.annotation",
            "foreground": "var(blue)"
        },
        {
            "name": "Comments",
            "scope": "comment, punctuation.definition.comment",
            "foreground": "var(blue5)"
        },
        {"name": "Variable", "scope": "variable", "foreground": "var(blue6)"},
        {
            "name": "Keyword, Storage",
            "scope": "keyword, storage.type, storage.modifier",
            "foreground": "var(pink2)"
        },
        // custom: Java red public static instead of pink, which blends in
        {
            "name": "Keyword, Storage",
            "scope": "keyword.control.import, storage.type.java, storage.type.void.java, storage.modifier.java, keyword.other.storage.new.java",
            "foreground": "var(red2)"
        },
        {
            "name": "Operator, Misc",
            "scope": "keyword.operator, constant.other.color, punctuation, meta.tag, punctuation.definition.tag, punctuation.separator.inheritance.php, punctuation.definition.tag.html, punctuation.definition.tag.begin.html, punctuation.definition.tag.end.html, punctuation.section.embedded, keyword.other.template, keyword.other.substitution",
            "foreground": "var(cyan)"
        },
        // custom: programming/math operators orange (++, +=, <, <<, etc.)
        {
            "name": "Operator, Math",
            "scope": "keyword.operator.assignment, keyword.operator.arithmetic, keyword.operator.relational, keyword.operator.comparison, keyword.operator.increment-decrement, keyword.operator.word, keyword.operator.logical, keyword.operator.ternary, keyword.operator.without, keyword.operator.or, keyword.operator.unpacking, keyword.operator.python",
            "foreground": "var(orange3)"
        },
        // custom: Java array operator is cyan, not pink
        {
            "name": "Operator, Java Array",
            "scope": "storage.modifier.array.java",
            "foreground": "var(cyan)"
        },
        {
            "name": "Tag",
            // custom: make JSON keys red like YAML/XML, don't know what else this affects
            // added meta.mapping.key string
            "scope": "entity.name.tag, meta.tag.sgml, markup.deleted.git_gutter, meta.mapping.key string",
            "foreground": "var(red3)"
        },
        {
            "name": "Function, Special Method, Block Level",
            "scope": "entity.name.function, meta.function-call, variable.function, support.function, keyword.other.special-method, meta.block-level",
            "foreground": "var(blue)"
        },
        // custom: normal variables are white
        {
            "name": "Variable, Normal",
            "scope": "meta.function-call.arguments, meta.function-call",
            "foreground": "var(white)"
        },
        {
            "name": "Other Variable, String Link",
            "scope": "support.other.variable, string.other.link",
            "foreground": "var(red)"
        },
        {
            "name": "Number, Constant, Function Argument, Tag Attribute, Embedded",
            "scope": "constant.numeric, constant.language, support.constant, constant.character, variable.parameter, keyword.other.unit",
            "foreground": "var(orange3)"
        },
        // custom: Java/C++ decimal for numbers is orange
        {
            "name": "Number, Punctuation",
            "scope": "punctuation.separator.decimal",
            "foreground": "var(orange3)"
        },
        // custom: white parameter in Java
        {
            "name": "Parameter, Java",
            "scope": "variable.parameter.java",
            "foreground": "var(white)"
        },
        {
            "name": "String, Symbols, Inherited Class, Markup Heading",
            "scope": "string, constant.other.symbol, constant.other.key, entity.other.inherited-class, markup.heading, markup.inserted.git_gutter, meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js",
            "foreground": "var(green)",
            "font_style": "normal"
        },
        {
            "name": "Class, Support",
            "scope": "entity.name.class, entity.name.type.class, support.type, support.class, support.orther.namespace.use.php, meta.use.php, support.other.namespace.php, markup.changed.git_gutter",
            "foreground": "var(orange)"
        },
        {
            "name": "Sub-methods",
            "scope": "entity.name.module.js, variable.import.parameter.js, variable.other.class.js",
            "foreground": "var(red2)"
        },
        {
            "name": "Language methods",
            "scope": "variable.language",
            "foreground": "var(red2)",
            "font_style": "italic"
        },
        {
            "name": "Object keys",
            "scope": "meta.group.braces.curly.js constant.other.object.key.js string.unquoted.label.js",
            "foreground": "var(blue6)"
        },
        {
            "name": "Class methods",
            "scope": "meta.class-method.js entity.name.function.js, variable.function.constructor, meta.class.js meta.class.property.js meta.method.js string.unquoted.js entity.name.function.js",
            "foreground": "var(white)"
        },
        {
            "name": "Attributes",
            "scope": "entity.other.attribute-name",
            "foreground": "var(pink)"
        },
        {
            "name": "Inserted",
            "scope": "markup.inserted",
            "foreground": "var(green)"
        },
        {
            "name": "Deleted",
            "scope": "markup.deleted",
            "foreground": "var(red2)"
        },
        {
            "name": "Changed",
            "scope": "markup.changed",
            "foreground": "var(pink)"
        },
        {
            "name": "Regular Expressions",
            "scope": "string.regexp",
            "foreground": "var(cyan)"
        },
        {
            "name": "Escape Characters",
            "scope": "constant.character.escape",
            "foreground": "var(cyan)"
        },
        {
            "name": "URL",
            "scope": "*url*, *link*, *uri*",
            "font_style": "underline"
        },
        {
            "name": "Search Results Nums",
            "scope": "constant.numeric.line-number.find-in-files - match",
            "foreground": "var(red4)"
        },
        {
            "name": "Search Results Lines",
            "scope": "entity.name.filename.find-in-files",
            "foreground": "var(green)"
        },
        {
            "name": "Decorators",
            "scope": "tag.decorator.js entity.name.tag.js, tag.decorator.js punctuation.definition.tag.js",
            "foreground": "var(blue)",
            "font_style": "italic"
        },
        {
            "name": "ES7 Bind Operator",
            "scope": "source.js constant.other.object.key.js string.unquoted.label.js",
            "foreground": "var(red2)",
            "font_style": "italic"
        },
        {
            "name": "JSON key - Level 8",
            "scope": "source.json meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(orange)"
        },
        {
            "name": "JSON key - Level 7",
            "scope": "source.json meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(pink2)"
        },
        {
            "name": "JSON key - Level 6",
            "scope": "source.json meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(white)"
        },
        {
            "name": "JSON key - Level 5",
            "scope": "source.json meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(blue)"
        },
        {
            "name": "JSON key - Level 4",
            "scope": "source.json meta meta meta meta meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(red4)"
        },
        {
            "name": "JSON key - Level 3",
            "scope": "source.json meta meta meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(red2)"
        },
        {
            "name": "JSON key - Level 2",
            "scope": "source.json meta meta meta meta.structure.dictionary.json string.quoted.double.json - meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta meta meta.structure.dictionary.json punctuation.definition.string - meta meta meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(orange3)"
        },
        {
            "name": "JSON key - Level 1",
            "scope": "source.json meta meta.structure.dictionary.json string.quoted.double.json - meta meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta meta.structure.dictionary.json punctuation.definition.string - meta meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(orange)"
        },
        {
            "name": "JSON key - Level 0",
            "scope": "source.json meta.structure.dictionary.json string.quoted.double.json - meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json, source.json meta.structure.dictionary.json punctuation.definition.string - meta.structure.dictionary.json meta.structure.dictionary.value.json punctuation.definition.string",
            "foreground": "var(pink2)"
        }
    ]
}
